// <auto-generated />
using System;
using Api_CreartNino.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api_CreartNino.Migrations
{
    [DbContext(typeof(CreartNinoContext))]
    [Migration("20250705114941_campo-departamentos-proveedores")]
    partial class campodepartamentosproveedores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api_CreartNino.Models.CategoriaInsumo", b =>
                {
                    b.Property<int>("IdCatInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatInsumo"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCategoria")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCatInsumo")
                        .HasName("PK__Categori__6815ADDF91908ECC");

                    b.ToTable("Categoria_Insumo", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCategoriaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaProducto"));

                    b.Property<string>("CategoriaProducto1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CategoriaProducto");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("IdCategoriaProducto")
                        .HasName("PK__Categori__8A4F21C36F377EF0");

                    b.ToTable("Categoria_Productos", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCliente")
                        .HasName("PK__Clientes__D5946642051B7E6E");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateOnly?>("FechaCompra")
                        .HasColumnType("date");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compras__0A5CDB5C8FEC0F2F");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Api_CreartNino.Models.DetallePedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePedido"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdDetallePedido")
                        .HasName("PK__Detalle___48AFFD956BFCC7AE");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProducto");

                    b.ToTable("Detalle_Pedido", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.DetalleProduccion", b =>
                {
                    b.Property<int>("IdDetalleProduccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleProduccion"));

                    b.Property<int?>("CantidadProducir")
                        .HasColumnType("int");

                    b.Property<int?>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int?>("IdProduccion")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdDetalleProduccion")
                        .HasName("PK__Detalle___2BD8C21E020B12D2");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdProduccion");

                    b.HasIndex("IdProducto");

                    b.ToTable("Detalle_Produccion", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.DetallesCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdDetalleCompra")
                        .HasName("PK__Detalles__E046CCBB4357A67F");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdInsumo");

                    b.ToTable("Detalles_Compra", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.EstadoCompra", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("NombreEstado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstado")
                        .HasName("PK__Estado_C__FBB0EDC15C474046");

                    b.ToTable("Estado_Compra", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.EstadosPedido", b =>
                {
                    b.Property<int>("IdEstadoPedidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPedidos"));

                    b.Property<string>("NombreEstado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstadoPedidos")
                        .HasName("PK__Estados___4243CC3E3ADA014C");

                    b.ToTable("Estados_Pedido", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.EstadosProduccion", b =>
                {
                    b.Property<int>("IdEstadoProduccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoProduccion"));

                    b.Property<string>("NombreEstado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstadoProduccion")
                        .HasName("PK__Estados___6DEB350E9C367EDB");

                    b.ToTable("Estados_Produccion", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.ImagenesProducto", b =>
                {
                    b.Property<int>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagen"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("URL");

                    b.HasKey("IdImagen")
                        .HasName("PK__Imagenes__B42D8F2A203F6994");

                    b.ToTable("Imagenes_Productos", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.Insumo", b =>
                {
                    b.Property<int>("IdInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsumo"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCatInsumo")
                        .HasColumnType("int");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("PrecioUnitario")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdInsumo")
                        .HasName("PK__Insumos__F378A2AFCBC81034");

                    b.HasIndex("IdCatInsumo");

                    b.HasIndex("IdMarca");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("NombreMarca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMarca")
                        .HasName("PK__Marca__4076A8873CD5B467");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<string>("ComprobantePago")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaPedido")
                        .HasColumnType("date");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("TotalPedido")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("ValorInicial")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("ValorRestante")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdPedido")
                        .HasName("PK__Pedidos__9D335DC3807CE14F");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstado");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermisos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermisos"));

                    b.Property<string>("RolPermisos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPermisos")
                        .HasName("PK__Permisos__CE7ED38DD4DEF2CC");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Produccion", b =>
                {
                    b.Property<int>("IdProduccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduccion"));

                    b.Property<int?>("EstadosPedido")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FechaFinal")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("NombreProduccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoProduccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdProduccion")
                        .HasName("PK__Producci__3137BD8383774E96");

                    b.HasIndex("EstadosPedido");

                    b.HasIndex("IdEstado");

                    b.ToTable("Produccion", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaProducto")
                        .HasColumnType("int");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Imagen")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__09889210FFDA10C6");

                    b.HasIndex("CategoriaProducto");

                    b.HasIndex("Imagen");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Proveedore", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoPersona")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedo__E8B631AF01BAF91F");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Rol")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol")
                        .HasName("PK__Roles__2A49584C1259A8E6");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuarios"));

                    b.Property<string>("Celular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contrasena")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUsuarios")
                        .HasName("PK__Usuarios__EAEBAC8F208537F1");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "Correo", "NumDocumento" }, "UQ_Correo_NumDocumento")
                        .IsUnique()
                        .HasFilter("[Correo] IS NOT NULL AND [NumDocumento] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Api_CreartNino.Models.VwRolesPermiso", b =>
                {
                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdPermisos")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RolPermisos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_Roles_Permisos", (string)null);
                });

            modelBuilder.Entity("RolPermisos", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdPermisos")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdPermisos");

                    b.HasIndex("IdPermisos");

                    b.ToTable("Rol_Permisos", (string)null);
                });

            modelBuilder.Entity("Api_CreartNino.Models.Compra", b =>
                {
                    b.HasOne("Api_CreartNino.Models.EstadoCompra", "IdEstadoNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Compras__IdEstad__6E01572D");

                    b.HasOne("Api_CreartNino.Models.Marca", "IdMarcaNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK__Compras__IdMarca__6D0D32F4");

                    b.HasOne("Api_CreartNino.Models.Proveedore", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Compras__IdProve__6C190EBB");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.DetallePedido", b =>
                {
                    b.HasOne("Api_CreartNino.Models.Pedido", "IdPedidoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetallePedido_Pedido");

                    b.HasOne("Api_CreartNino.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetallePedido_Producto");

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.DetalleProduccion", b =>
                {
                    b.HasOne("Api_CreartNino.Models.Insumo", "IdInsumoNavigation")
                        .WithMany("DetalleProduccions")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetalleProduccion_IdInsumo");

                    b.HasOne("Api_CreartNino.Models.Produccion", "IdProduccionNavigation")
                        .WithMany("DetalleProduccions")
                        .HasForeignKey("IdProduccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetalleProduccion_IdProduccion");

                    b.HasOne("Api_CreartNino.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleProduccions")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetalleProduccion_IdProducto");

                    b.Navigation("IdInsumoNavigation");

                    b.Navigation("IdProduccionNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.DetallesCompra", b =>
                {
                    b.HasOne("Api_CreartNino.Models.Compra", "IdCompraNavigation")
                        .WithMany("DetallesCompras")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetallesCompra_Compra");

                    b.HasOne("Api_CreartNino.Models.Insumo", "IdInsumoNavigation")
                        .WithMany("DetallesCompras")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetallesCompra_Insumo");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdInsumoNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Insumo", b =>
                {
                    b.HasOne("Api_CreartNino.Models.CategoriaInsumo", "IdCatInsumoNavigation")
                        .WithMany("Insumos")
                        .HasForeignKey("IdCatInsumo")
                        .HasConstraintName("FK__Insumos__IdCatIn__6477ECF3");

                    b.HasOne("Api_CreartNino.Models.Marca", "IdMarcaNavigation")
                        .WithMany("Insumos")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK__Insumos__IdMarca__656C112C");

                    b.Navigation("IdCatInsumoNavigation");

                    b.Navigation("IdMarcaNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Pedido", b =>
                {
                    b.HasOne("Api_CreartNino.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__Pedidos__IdClien__4E88ABD4");

                    b.HasOne("Api_CreartNino.Models.EstadosPedido", "IdEstadoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Pedidos__IdEstad__4F7CD00D");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Produccion", b =>
                {
                    b.HasOne("Api_CreartNino.Models.EstadosPedido", "EstadosPedidoNavigation")
                        .WithMany("Produccions")
                        .HasForeignKey("EstadosPedido")
                        .HasConstraintName("FK__Produccio__Estad__59063A47");

                    b.HasOne("Api_CreartNino.Models.EstadosProduccion", "IdEstadoNavigation")
                        .WithMany("Produccions")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK__Produccio__IdEst__5812160E");

                    b.Navigation("EstadosPedidoNavigation");

                    b.Navigation("IdEstadoNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Producto", b =>
                {
                    b.HasOne("Api_CreartNino.Models.CategoriaProducto", "CategoriaProductoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaProducto")
                        .HasConstraintName("FK__Productos__Categ__48CFD27E");

                    b.HasOne("Api_CreartNino.Models.ImagenesProducto", "ImagenNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Imagen")
                        .HasConstraintName("FK__Productos__Image__49C3F6B7");

                    b.Navigation("CategoriaProductoNavigation");

                    b.Navigation("ImagenNavigation");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Usuario", b =>
                {
                    b.HasOne("Api_CreartNino.Models.Role", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuarios__IdRol__403A8C7D");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("RolPermisos", b =>
                {
                    b.HasOne("Api_CreartNino.Models.Permiso", "Permiso")
                        .WithMany("RolPermiso")
                        .HasForeignKey("IdPermisos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_CreartNino.Models.Role", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Api_CreartNino.Models.CategoriaInsumo", b =>
                {
                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Compra", b =>
                {
                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("Api_CreartNino.Models.EstadoCompra", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Api_CreartNino.Models.EstadosPedido", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Produccions");
                });

            modelBuilder.Entity("Api_CreartNino.Models.EstadosProduccion", b =>
                {
                    b.Navigation("Produccions");
                });

            modelBuilder.Entity("Api_CreartNino.Models.ImagenesProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Insumo", b =>
                {
                    b.Navigation("DetalleProduccions");

                    b.Navigation("DetallesCompras");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Marca", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Pedido", b =>
                {
                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Permiso", b =>
                {
                    b.Navigation("RolPermiso");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Produccion", b =>
                {
                    b.Navigation("DetalleProduccions");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Producto", b =>
                {
                    b.Navigation("DetallePedidos");

                    b.Navigation("DetalleProduccions");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Proveedore", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Api_CreartNino.Models.Role", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
